

Celestial Face Recognition Attendance System
Table of Contents
About
Features
Technologies Used
Prerequisites
Installation
Usage
1. Data Collection/Enrollment
2. Training the Model
3. Running the Attendance System
Project Structure
Configuration
Contributing
License
Contact
About
The Celestial Face Recognition Attendance System is an automated solution designed to mark attendance using advanced facial recognition technology. Leveraging the power of OpenCV and deep learning techniques, this system offers a robust and efficient way to track presence in various environments, such such as educational institutions, offices, or events.

The "Celestial" aspect implies a focus on accuracy, reliability, and a broad scope. This system aims to minimize manual attendance errors, save time, and provide a secure method for logging attendance.

Features
Real-time Face Detection: Utilizes Haar Cascades or pre-trained deep learning models for accurate and fast face detection.
Facial Recognition: Employs algorithms like LBPH, EigenFaces, FisherFaces, or more advanced models (e.g., FaceNet, ArcFace) for recognizing enrolled individuals.
Automated Attendance Marking: Automatically records attendance with timestamps upon successful identification.
Enrollment System: Allows easy registration of new individuals by capturing multiple face samples.
Data Persistence: Stores attendance records and user information in a structured database (e.g., CSV, SQLite).
User-friendly Interface: (Optional, depending on implementation) A simple graphical or command-line interface for interaction.
Reporting: (Optional) Generates attendance reports for specific dates or individuals.
Technologies Used
Python: The primary programming language for the entire system.
OpenCV: Essential library for computer vision tasks, including face detection, facial recognition algorithms, and camera interaction.
NumPy: Used for numerical operations, especially with image data and array manipulation.
Pillow (PIL Fork): (Optional) For image processing tasks.
Pandas: (Optional) For data manipulation and handling attendance records, especially if using CSV.
Scikit-learn: (Optional, if using machine learning models for classification beyond basic OpenCV recognizers).
SQLite3: (Optional) For storing attendance data and user profiles.
